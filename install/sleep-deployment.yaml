apiVersion: v1
kind: ServiceAccount
metadata:
  name: pilot
  namespace: pilot-load
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pilot-load
  namespace: pilot-load
  labels:
    app: pilot-load
spec:
  replicas: 1
  template:
    metadata:
      name: pilot-load
      annotations:
        sidecar.istio.io/inject: "false"
        prometheus.io/scrape: "true"
        prometheus.io/port: "8765"
      labels:
        app: pilot-load
    spec:
      serviceAccountName: pilot
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              namespaces: [istio-system]
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - istiod
              topologyKey: kubernetes.io/hostname
      # May take a while to shut down
      containers:
      - name: pilot-load
        image: gcr.io/howardjohn-istio/pilot-load
        imagePullPolicy: Always
        command: ["sleep", "1000000000000"]
        resources:
          requests:
            cpu: 2000m
            memory: 2Gi
        env:
        - name: KUBECONFIG
          value: /etc/config/kubeconfig/kubeconfig.yaml
        volumeMounts:
        - name: kubeconfig
          mountPath: /etc/config/kubeconfig
        - name: config
          mountPath: /etc/config/config
      volumes:
      - name: kubeconfig
        configMap:
          name: pilot-load-kubeconfig
          optional: true
      - name: config
        configMap:
          name: pilot-load-config
          optional: true
  selector:
    matchLabels:
      app: pilot-load
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pilot-load-kubeconfig
data:
  kubeconfig.yaml: |
    apiVersion: v1
    clusters:
    - cluster:
        server: http://apiserver.pilot-load:18090
      name: load
    contexts:
    - context:
        cluster: load
        user: fake
      name: load
    current-context: load
    kind: Config
    preferences: {}
    users:
    - name: fake
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pilot-load
  namespace: pilot-load
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["mutatingwebhookconfigurations"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""]
  resources: ["serviceaccounts/token"]
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pilot-load-binding
  namespace: pilot-load
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pilot-load
subjects:
- kind: ServiceAccount
  name: pilot
  namespace: pilot-load